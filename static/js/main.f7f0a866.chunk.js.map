{"version":3,"sources":["assets/images/remove.svg","assets/images/edit.svg","assets/images/close.svg","assets/images/plus.svg","api/index.js","components/Badge/index.jsx","components/List/index.jsx","components/AddList/index.jsx","components/Tasks/Task/index.jsx","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["module","exports","BASE_ENDPOINT","deleteMenuItem","id","axios","delete","updateMenuTitle","listId","title","patch","name","updateTaskText","text","removeTask","updateStatusTask","completed","Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","beforeRemove","a","window","confirm","map","item","index","key","icon","tasks","length","src","removeSVG","alt","AddButtonList","colors","onAddList","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","onClose","AddList","alert","menuObj","colorId","post","data","find","c","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","target","type","placeholder","Task","onEdit","onComplete","editMode","setEditMode","onBlur","onRemoveHandler","onCompleteHandler","checked","htmlFor","autoFocus","editSvg","removeSvg","CreateTask","list","onCreateTask","formVisible","setFormVisible","toggleFormVisible","onSubmit","disabled","plusSvg","Tasks","onEditTitleList","onRemoveTask","onEditTask","setTitle","style","hex","EditSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","console","log","get","fetchData","location","pathname","split","newLists","listItem","taskId","newList","filter","push","newItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7f0a866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.71708d87.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.93ca2630.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.14e2f379.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.ba9a0c8a.svg\";","import axios from 'axios';\r\n\r\nconst BASE_ENDPOINT = `http://localhost:3001`\r\n\r\nexport const fetchLists = () => {\r\n    return axios.get(`${BASE_ENDPOINT}/lists?_expand=color&_embed=tasks`)\r\n}\r\n\r\nexport const fetchColors = () => {\r\n    return axios.get(`${BASE_ENDPOINT}/colors`)\r\n}\r\n\r\nexport const deleteMenuItem = (id) => {\r\n    return axios.delete(`${BASE_ENDPOINT}/lists/${id}`)\r\n}\r\n\r\nexport const addMenuItem = (menuObj) => {\r\n    return axios.post(`${BASE_ENDPOINT}/lists`, menuObj)\r\n}\r\n\r\nexport const updateMenuTitle = (listId, title) => {\r\n    return axios.patch(`${BASE_ENDPOINT}/lists/${listId}`, { name: title })\r\n}\r\n\r\nexport const updateTaskText = (id, text) => {\r\n    return axios.patch(`${BASE_ENDPOINT}/tasks/${id}`, { text });\r\n}\r\n\r\nexport const removeTask = (id) => {\r\n    return axios.delete(`${BASE_ENDPOINT}/tasks/${id}`);\r\n}\r\n\r\nexport const updateStatusTask = (id, completed) => {\r\n    return axios.patch(`${BASE_ENDPOINT}/tasks/${id}`, {\r\n        completed: !completed\r\n    });\r\n}","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i\r\n        onClick={onClick}\r\n        className={classNames('badge', { [`badge-${color.name}`]: color.name }, className)}\r\n    ></i>\r\n)\r\n\r\nexport default Badge;","import React from 'react';\r\nimport { deleteMenuItem } from '../../api'\r\n\r\nimport classNames from 'classnames'\r\nimport Badge from '../Badge';\r\n\r\nimport './List.scss'\r\n\r\nimport removeSVG from '../../assets/images/remove.svg';\r\n\r\nconst List = ({ items, isRemovable, onClick, onRemove, onClickItem, activeItem }) => {\r\n\r\n    const beforeRemove = async ({ id, name }) => {\r\n        if (window.confirm(`Вы действительно хотите удалить ${name}?`)) {\r\n            await deleteMenuItem(id)\r\n            onRemove(id)\r\n        }\r\n    }\r\n\r\n    return <ul onClick={onClick} className=\"list\">\r\n        {items.map((item, index) => (\r\n            <li\r\n                onClick={onClickItem ? () => onClickItem(item) : null}\r\n                className={classNames(item.className, { 'active': activeItem && activeItem.id === item.id })}\r\n                key={index}\r\n            >\r\n                {item.icon ?\r\n                    item.icon :\r\n                    <Badge color={item.color} />\r\n                }\r\n                <p>{item.name} {item.tasks && `(${item.tasks.length})`}</p>\r\n                {isRemovable && <img src={removeSVG} onClick={() => beforeRemove(item)} className=\"remove-btn\" alt=\"Remove\" />}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n}\r\n\r\nexport default List","import React, { useState, useEffect } from 'react';\r\nimport { addMenuItem } from '../../api'\r\n\r\nimport List from '../List';\r\nimport Badge from '../Badge';\r\n\r\nimport './AddList.scss'\r\nimport closeSvg from '../../assets/images/close.svg';\r\n\r\nconst AddButtonList = ({ colors, onAddList }) => {\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, setSelectedColor] = useState(null);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (colors) setSelectedColor(colors[0].id)\r\n    }, [colors]);\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setSelectedColor(colors[0].id);\r\n        setInputValue('');\r\n    }\r\n\r\n    const AddList = async () => {\r\n        if (!inputValue) {\r\n            alert('Введите название папки')\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const { data } = await addMenuItem({ name: inputValue, colorId: selectedColor });\r\n\r\n        onAddList({\r\n            ...data,\r\n            color: { ...colors.find(c => c.id === selectedColor), },\r\n            tasks: []\r\n        });\r\n\r\n        onClose();\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return <div className=\"add-list\">\r\n        <List\r\n            onClick={() => setVisiblePopup(true)}\r\n            items={[\r\n                {\r\n                    className: 'add-list',\r\n                    icon: (\r\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6 1V11\" stroke=\"#868686\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            <path d=\"M1 6H11\" stroke=\"#868686\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>\r\n                    ),\r\n                    name: 'Добавить папку'\r\n                }\r\n            ]}\r\n        />\r\n\r\n        {visiblePopup && <div className=\"add-list-popup\">\r\n            <div className=\"close\">\r\n                <img onClick={onClose} src={closeSvg} className=\"close\" alt=\"Close\" />\r\n            </div>\r\n\r\n            <input\r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)}\r\n                className=\"field\"\r\n                type=\"text\"\r\n                placeholder=\"Название папки\"\r\n            />\r\n\r\n            <div className=\"color-list\">\r\n                {colors.map(color => (\r\n                    <Badge\r\n                        key={color.id}\r\n                        onClick={() => setSelectedColor(color.id)}\r\n                        color={color}\r\n                        className={selectedColor === color.id && 'active'}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <button onClick={AddList} className=\"button\">\r\n                {!isLoading ? 'Добавить' : 'Добавляем...'}\r\n            </button>\r\n        </div>}\r\n    </div>\r\n\r\n}\r\n\r\nexport default AddButtonList;","import React, { useState, useEffect } from 'react';\r\nimport { updateTaskText, removeTask, updateStatusTask } from '../../../api'\r\n\r\nimport editSvg from '../../../assets/images/edit.svg';\r\nimport removeSvg from '../../../assets/images/remove.svg';\r\n\r\nimport './task.scss';\r\n\r\nconst Task = ({ id, listId, text, completed, onRemove, onEdit, onComplete }) => {\r\n    const [inputValue, setInputValue] = useState(text);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setInputValue(text);\r\n    }, [text])\r\n\r\n    const onBlur = async () => {\r\n        setEditMode(false);\r\n\r\n        try {\r\n            await updateTaskText(id, inputValue)\r\n            onEdit(listId, id, inputValue);\r\n        } catch (error) {\r\n            alert('Уппс! Произошла ошибка')\r\n        }\r\n    }\r\n\r\n    const onRemoveHandler = async () => {\r\n        if (!window.confirm('Вы действительно хотите удалить задачу?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await removeTask(id);\r\n            onRemove(listId, id);\r\n        } catch (error) {\r\n            alert('Уппс! Произошла ошибка')\r\n        }\r\n    }\r\n\r\n    const onCompleteHandler = async () => {\r\n        try {\r\n            await updateStatusTask(id, completed);\r\n            onComplete(listId, id);\r\n        } catch (error) {\r\n            alert('Уппс! Произошла ошибка')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"task\">\r\n            <input\r\n                id={`check-${id}`}\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={onCompleteHandler}\r\n            />\r\n\r\n            <label htmlFor={`check-${id}`} className=\"check\">\r\n                <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"#b3b3b3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                </svg>\r\n            </label>\r\n\r\n            {!editMode ? (\r\n                <div className=\"task-text\">{text}</div>\r\n            ) : (\r\n                    <input\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                        onBlur={onBlur}\r\n                        className=\"task-text\"\r\n                        type=\"text\"\r\n                        autoFocus={true}\r\n                    />\r\n                )}\r\n\r\n            <div className=\"task-control\">\r\n                <button onClick={() => setEditMode(true)} type=\"button\" className=\"task-edit\">\r\n                    <img src={editSvg} alt=\"Edit\" />\r\n                </button>\r\n                <button onClick={onRemoveHandler} type=\"button\" className=\"task-remove\">\r\n                    <img src={removeSvg} alt=\"Remove\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport plusSvg from '../../assets/images/plus.svg';\r\n\r\nconst CreateTask = ({ list, onCreateTask }) => {\r\n    const [formVisible, setFormVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!formVisible);\r\n        setInputValue('');\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        if (!inputValue) {\r\n            alert('Введите название новой задачи!')\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const { data } = await axios.post('http://localhost:3001/tasks', {\r\n                listId: list.id,\r\n                text: inputValue,\r\n                completed: false\r\n            });\r\n            onCreateTask(list.id, data);\r\n            toggleFormVisible();\r\n        } catch (error) {\r\n            alert('Уппс! Произошла ошибка')\r\n        }\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-task\">\r\n            {!formVisible ? (\r\n                <button onClick={toggleFormVisible} className=\"create-task-btn\">\r\n                    <img src={plusSvg} alt=\"Plus\" />\r\n                    <p>Новая задача</p>\r\n                </button>\r\n            ) : (\r\n                    <form className=\"create-task-form\">\r\n                        <input\r\n                            value={inputValue}\r\n                            onChange={e => setInputValue(e.target.value)}\r\n                            type=\"text\"\r\n                            className=\"field\"\r\n                            placeholder=\"Текст задачи\"\r\n                            autoFocus={true}\r\n                        />\r\n                        <button onClick={onSubmit} disabled={isLoading || !inputValue} className=\"button\" type=\"button\">\r\n                            {isLoading ? 'Добавляется...' : 'Добавить задачу'}\r\n                        </button>\r\n                        <button onClick={toggleFormVisible} className=\"button button-gray\" type=\"button\">Отмена</button>\r\n                    </form>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTask;","import React, { useState, useEffect } from 'react';\r\nimport { updateMenuTitle } from '../../api'\r\n\r\nimport Task from './Task';\r\n\r\nimport './Tasks.scss';\r\n\r\nimport EditSvg from '../../assets/images/edit.svg';\r\nimport CreateTask from './CreateTask';\r\n\r\nconst Tasks = ({ list, onEditTitleList, onCreateTask, onRemoveTask, onEditTask, onComplete }) => {\r\n    const [title, setTitle] = useState(list.name);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTitle(list.name);\r\n    }, [list]);\r\n\r\n    const onBlur = async () => {\r\n        setEditMode(false);\r\n\r\n        try {\r\n            await updateMenuTitle(list.id, title);\r\n            onEditTitleList(list.id, title);\r\n        } catch (error) {\r\n            alert('Уппс! Произошла ошибка')\r\n        }\r\n    }\r\n\r\n    return <div className=\"tasks-list\">\r\n        <div onClick={() => setEditMode(true)} className=\"tasks-title\">\r\n            {editMode ?\r\n                <input\r\n                    className=\"field\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    onBlur={onBlur}\r\n                    autoFocus={true}\r\n                /> :\r\n                <>\r\n                    <h2 style={{ color: list.color.hex }}>{title}</h2>\r\n                    <img src={EditSvg} alt=\"Edit\" />\r\n                </>\r\n            }\r\n        </div>\r\n\r\n        <div className=\"tasks-body\">\r\n\r\n            {list.tasks && list.tasks.length > 0 ? (\r\n                list.tasks.map(task => (\r\n                    <Task key={task.id} onRemove={onRemoveTask} onEdit={onEditTask} onComplete={onComplete} {...task} />\r\n                ))\r\n            ) : (\r\n                    <h2 className=\"tasks-empty\">Задачи отсутствуют</h2>\r\n                )\r\n            }\r\n\r\n            <CreateTask key={list.id} list={list} onCreateTask={onCreateTask} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Tasks;","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames'\nimport { Route, useHistory } from 'react-router-dom'\n\nimport { List, Addlist, Tasks } from './components'\nimport { fetchLists, fetchColors } from './api'\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  console.log('histiry: ', history)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const lists = await fetchLists();\n      setLists(lists.data);\n\n      const colors = await fetchColors();\n      setColors(colors.data);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n\n    if (lists) {\n      const list = lists.find(list => list.id === +listId);\n      setActiveItem(list);\n    }\n  }, [lists, history.location.pathname])\n\n  const onAddList = (newItem) => {\n    setLists([\n      ...lists,\n      newItem\n    ]);\n  }\n\n  const onRemove = (id) => {\n    setLists(lists.filter(item => item.id !== id))\n  }\n\n  const activeItemControl = (item) => {\n    // setActiveItem(item);\n    history.push(`/lists/${item.id}`)\n  }\n\n  const onEditTitleList = (id, title) => {\n    const newLists = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    });\n\n    setLists(newLists);\n  }\n\n  const onCreateTask = (id, task) => {\n    const newLists = lists.map((listItem) => {\n      if (listItem.id === id) {\n        listItem.tasks = [...listItem.tasks, task];\n      }\n      return listItem;\n    })\n\n    setLists(newLists);\n  }\n\n  const onRemoveTask = (listId, taskId) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.filter(task => task.id !== taskId);\n      }\n      return list\n    });\n\n    setLists(newList);\n  }\n\n  const onEditTask = (listId, taskId, text) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.text = text;\n          }\n          return task;\n        })\n      }\n      return list;\n    })\n\n    setLists(newList);\n  }\n\n  const onComplete = (listId, taskId) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = !task.completed;\n          }\n          return task\n        })\n      }\n      return list\n    })\n\n    setLists(newList)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo\">\n        <div className=\"menu\">\n          <List\n            onClickItem={() => history.push('/')}\n            items={[\n              {\n                icon: (\n                  <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\" fill=\"#7C7C7C\" />\n                  </svg>\n                ),\n                name: 'Все задачи'\n              }\n            ]}\n          />\n\n          {lists ? <List\n            items={lists}\n            onRemove={onRemove}\n            onClickItem={activeItemControl}\n            activeItem={activeItem}\n            isRemovable\n          /> :\n            ('Загрузка...')\n          }\n\n          <Addlist colors={colors} onAddList={onAddList} />\n        </div>\n\n        <div className=\"content\">\n          <div className={classNames('tasks', { 'multi-topics': history.location.pathname === '/' })}>\n            <Route exact path='/'>\n              {lists && lists.map(list => (\n                <Tasks\n                  key={list.id}\n                  list={list}\n                  onEditTitleList={onEditTitleList}\n                  onCreateTask={onCreateTask}\n                  onRemoveTask={onRemoveTask}\n                  onEditTask={onEditTask}\n                  onComplete={onComplete}\n                />\n              ))}\n            </Route>\n\n            <Route path='/lists/:id'>\n              {lists &&\n                activeItem &&\n                <Tasks\n                  list={activeItem}\n                  onEditTitleList={onEditTitleList}\n                  onCreateTask={onCreateTask}\n                  onRemoveTask={onRemoveTask}\n                  onEditTask={onEditTask}\n                  onComplete={onComplete}\n                />}\n            </Route>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}